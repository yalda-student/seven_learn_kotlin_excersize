// Generated by view binder compiler. Do not edit!
package com.example.http_excercise.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.http_excercise.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView description;

  @NonNull
  public final TextView productBrand;

  @NonNull
  public final TextView productCategory;

  @NonNull
  public final TextView productName;

  @NonNull
  public final TextView productPrice;

  @NonNull
  public final TextView productRating;

  @NonNull
  public final ImageView productThumbnail;

  @NonNull
  public final ProgressBar progressCircular;

  private FragmentDetailBinding(@NonNull ConstraintLayout rootView, @NonNull TextView description,
      @NonNull TextView productBrand, @NonNull TextView productCategory,
      @NonNull TextView productName, @NonNull TextView productPrice,
      @NonNull TextView productRating, @NonNull ImageView productThumbnail,
      @NonNull ProgressBar progressCircular) {
    this.rootView = rootView;
    this.description = description;
    this.productBrand = productBrand;
    this.productCategory = productCategory;
    this.productName = productName;
    this.productPrice = productPrice;
    this.productRating = productRating;
    this.productThumbnail = productThumbnail;
    this.progressCircular = progressCircular;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.product_brand;
      TextView productBrand = ViewBindings.findChildViewById(rootView, id);
      if (productBrand == null) {
        break missingId;
      }

      id = R.id.product_category;
      TextView productCategory = ViewBindings.findChildViewById(rootView, id);
      if (productCategory == null) {
        break missingId;
      }

      id = R.id.product_name;
      TextView productName = ViewBindings.findChildViewById(rootView, id);
      if (productName == null) {
        break missingId;
      }

      id = R.id.product_price;
      TextView productPrice = ViewBindings.findChildViewById(rootView, id);
      if (productPrice == null) {
        break missingId;
      }

      id = R.id.product_rating;
      TextView productRating = ViewBindings.findChildViewById(rootView, id);
      if (productRating == null) {
        break missingId;
      }

      id = R.id.product_thumbnail;
      ImageView productThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (productThumbnail == null) {
        break missingId;
      }

      id = R.id.progress_circular;
      ProgressBar progressCircular = ViewBindings.findChildViewById(rootView, id);
      if (progressCircular == null) {
        break missingId;
      }

      return new FragmentDetailBinding((ConstraintLayout) rootView, description, productBrand,
          productCategory, productName, productPrice, productRating, productThumbnail,
          progressCircular);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
